{"version":3,"sources":["Navigation/Burger/Burger.js","Navigation/SideMenu/SideMenu.js","Navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Burger","isActive","setIsActive","className","onClick","SideMenu","href","Navigation","useState","prevState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAmBeA,G,YAhBA,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAEvB,OACI,mCACE,wBACAC,UAAS,gBAAWF,EAAU,kBAAmB,IAC9CG,QAASF,EAFZ,SAII,sBAAMC,UAAU,oBAAhB,SACI,sBAAMA,UAAU,yBCKnBE,G,MAfE,SAAC,GAAgB,IAAfJ,EAAc,EAAdA,SACf,OACA,mCACA,uBAAOE,UAAS,8BAAyBF,EAAS,8BAA8B,IAAhF,SACI,qBAAIE,UAAU,4BAAd,UACI,oBAAIA,UAAU,gCAAd,SAA8C,mBAAGG,KAAK,IAAR,wBAC9C,oBAAIH,UAAU,gCAAd,SAA8C,mBAAGG,KAAK,IAAR,wBAC9C,oBAAIH,UAAU,gCAAd,SAA8C,mBAAGG,KAAK,IAAR,2BAC9C,oBAAIH,UAAU,gCAAd,SAA8C,mBAAGG,KAAK,IAAR,mCCQ3CC,EAbI,WAAO,IAAD,EACWC,oBAAS,GADpB,mBACdP,EADc,KACJC,EADI,KAGrB,OACA,mCACC,sBAAKC,UAAU,SAAf,UACG,cAAC,EAAD,CAAQF,SAAUA,EAAUC,YAJX,kBAAMA,GAAY,SAAAO,GAAS,OAAGA,QAK/C,cAAC,EAAD,CAAUR,SAAUA,UCCbS,MAVf,WAGE,OACE,mCACA,cAAC,EAAD,OCIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.be848a8a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./Burger.css\"\r\n\r\nconst Burger = ({isActive, setIsActive}) => {\r\n\r\n    return (\r\n        <>\r\n          <button \r\n          className={`burger${isActive? \" burger--active\": \"\"}`}\r\n             onClick={setIsActive}\r\n          >\r\n              <span className=\"burger__container\">\r\n                  <span className=\"burger__icon\"></span>\r\n              </span>\r\n          </button> \r\n        </>\r\n      );\r\n}\r\n \r\nexport default Burger;\r\n\r\n","import React from 'react';\r\nimport \"./SideMenu.css\"\r\nconst SideMenu = ({isActive}) => {\r\n    return (\r\n    <>\r\n    <aside className={`SideMenu__container ${isActive?\"SideMenu__container--active\":\"\"}`}>\r\n        <ul className=\"SideMenu__container__list\">\r\n            <li className=\"SideMenu__container__listItem\"><a href=\"/\">About me</a></li>\r\n            <li className=\"SideMenu__container__listItem\"><a href=\"/\">My Stack</a></li>\r\n            <li className=\"SideMenu__container__listItem\"><a href=\"/\">My projects</a></li>\r\n            <li className=\"SideMenu__container__listItem\"><a href=\"/\">Contact me</a></li>\r\n        </ul>\r\n    </aside>\r\n    </>\r\n    );\r\n}\r\n \r\nexport default SideMenu;","\r\nimport React, { useState } from 'react';\r\nimport \"./Navigation.css\"\r\nimport Burger from \"./Burger/Burger\"\r\nimport SideMenu from \"./SideMenu/SideMenu\"\r\nconst Navigation = () => {\r\n    const [isActive, setIsActive] = useState(false)\r\n    const handleBurger = () => setIsActive(prevState=>!prevState)\r\n    return (\r\n    <>\r\n     <nav className=\"navbar\">\r\n        <Burger isActive={isActive} setIsActive={handleBurger}/>\r\n        <SideMenu isActive={isActive}/>\r\n     </nav>\r\n    </>  \r\n    );\r\n}\r\n \r\nexport default Navigation;","import './App.css';\nimport React from 'react';\nimport Navigation from \"./Navigation/Navigation\"\nfunction App() {\n  \n\n  return (\n    <>\n    <Navigation/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}